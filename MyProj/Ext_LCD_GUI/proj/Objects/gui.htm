<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\gui.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\gui.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050041: Last Updated: Wed Oct 08 07:15:14 2014
<BR><P>
<H3>Maximum Stack Usage =        268 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
SetGraphChartVisible &rArr; GL_DrawObliqueLine &rArr; LCD_DrawUniLine &rArr; DrawPiont
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1c]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1c]">ADC_IRQHandler</a><BR>
 <LI><a href="#[73]">AddPageControlObj</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[73]">AddPageControlObj</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1c]">ADC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[103]">AddComboOption</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[72]">AddRadioOption</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[4]">BusFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[74]">ChangeBack</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[15]">DMA1_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[16]">DMA1_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[17]">DMA1_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[18]">DMA1_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[19]">DMA1_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1a]">DMA1_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1b]">DMA1_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[30]">DMA1_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[34]">DMA2_Stream0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[35]">DMA2_Stream1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[36]">DMA2_Stream2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[37]">DMA2_Stream3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[38]">DMA2_Stream4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3a]">DMA2_Stream5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3b]">DMA2_Stream6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3c]">DMA2_Stream7_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[7]">DebugMon_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[10]">EXTI0_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2d]">EXTI15_10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[11]">EXTI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[12]">EXTI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[13]">EXTI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[14]">EXTI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1d]">EXTI9_5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[e]">FLASH_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[40]">FPU_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5b]">GetObjCoordinates</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[121]">GetObjStatus</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[26]">I2C1_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[25]">I2C1_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[28]">I2C2_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[27]">I2C2_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3f]">I2C3_ER_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3e]">I2C3_EV_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[62]">LED3_Toggle</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[61]">LED4_Toggle</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[5f]">LED5_Toggle</a> from main.o(.text) referenced from main.o(.text)
 <LI><a href="#[3]">MemManage_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[45]">NullFunc</a> from graphicobject.o(.text) referenced from main.o(.text)
 <LI><a href="#[39]">OTG_FS_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2f]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[b]">PVD_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[f]">RCC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2e]">RTC_Alarm_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[d]">RTC_WKUP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[31]">SDIO_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[29]">SPI1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2a]">SPI2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[33]">SPI3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[41]">SPI4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[47]">SPI_2LinesRxISR</a> from stm32f4xx_hal_spi.o(.text) referenced from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[4b]">SPI_DMAError</a> from stm32f4xx_hal_spi.o(.text) referenced 2 times from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[4c]">SPI_DMAHalfReceiveCplt</a> from stm32f4xx_hal_spi.o(.text) referenced 2 times from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[49]">SPI_DMAHalfTransmitCplt</a> from stm32f4xx_hal_spi.o(.text) referenced from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[4e]">SPI_DMAHalfTransmitReceiveCplt</a> from stm32f4xx_hal_spi.o(.text) referenced from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[4d]">SPI_DMAReceiveCplt</a> from stm32f4xx_hal_spi.o(.text) referenced 2 times from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[4a]">SPI_DMATransmitCplt</a> from stm32f4xx_hal_spi.o(.text) referenced from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[4f]">SPI_DMATransmitReceiveCplt</a> from stm32f4xx_hal_spi.o(.text) referenced from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[48]">SPI_RxISR</a> from stm32f4xx_hal_spi.o(.text) referenced from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[46]">SPI_TxISR</a> from stm32f4xx_hal_spi.o(.text) referenced from stm32f4xx_hal_spi.o(.text)
 <LI><a href="#[6]">SVC_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[52]">SetButtonVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[55]">SetCheckboxVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[51]">SetComboBoxVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[59]">SetGraphChartVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[58]">SetHistogramVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[56]">SetIconVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[50]">SetLabelVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[5a]">SetPage</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[54]">SetRadioButtonVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[57]">SetSlidebarVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[53]">SetSwitchVisible</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[120]">ShowPage</a> from graphicobject.o(.text) referenced from graphicobject.o(.text)
 <LI><a href="#[9]">SysTick_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[43]">SystemInit</a> from system_stm32f4xx.o(.text) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[c]">TAMP_STAMP_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1e]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[21]">TIM1_CC_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[20]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[1f]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[22]">TIM2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[23]">TIM3_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[24]">TIM4_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[32]">TIM5_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2b]">USART1_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[2c]">USART2_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[3d]">USART6_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[5]">UsageFault_Handler</a> from stm32f4xx_it.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[a]">WWDG_IRQHandler</a> from startup_stm32f401xe.o(.text) referenced from startup_stm32f401xe.o(RESET)
 <LI><a href="#[44]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f401xe.o(.text)
 <LI><a href="#[5c]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0sprintf)
 <LI><a href="#[42]">main</a> from main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[44]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[13f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[5d]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[138]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[140]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[141]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[142]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[143]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[144]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>SDIO_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f401xe.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>ChangeBack</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, main.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[5f]"></a>LED5_Toggle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED5_Toggle &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[61]"></a>LED4_Toggle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED4_Toggle &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[62]"></a>LED3_Toggle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LED3_Toggle &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[42]"></a>main</STRONG> (Thumb, 424 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = main &rArr; ProcessInputData &rArr; CallPreEvents &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOutCalculate
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_LCD_Resolution
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInputData
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSlidebar
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewRadioButtonGrp
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayDirect
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_Init
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Clear
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorShow
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorReadBtnstick
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorInit
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_PageObj
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRadioOption
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPageControlObj
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7d]"></a>LED6_Toggle</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, main.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>MemManage_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>BusFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>UsageFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_it.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_it.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SysTick_Handler
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_stm32f4xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f401xe.o(.text)
</UL>
<P><STRONG><a name="[145]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 174 bytes, Stack size 16 bytes, system_stm32f4xx.o(.text), UNUSED)

<P><STRONG><a name="[146]"></a>BSP_GetVersion</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_nucleo.o(.text), UNUSED)

<P><STRONG><a name="[69]"></a>BSP_LED_Init</STRONG> (Thumb, 86 bytes, Stack size 32 bytes, stm32f4xx_nucleo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[81]"></a>BSP_LED_On</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>

<P><STRONG><a name="[82]"></a>BSP_LED_Off</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>

<P><STRONG><a name="[60]"></a>BSP_LED_Toggle</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED6_Toggle
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED3_Toggle
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED4_Toggle
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LED5_Toggle
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>

<P><STRONG><a name="[6a]"></a>BSP_PB_Init</STRONG> (Thumb, 158 bytes, Stack size 32 bytes, stm32f4xx_nucleo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = BSP_PB_Init &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7b]"></a>BSP_PB_GetState</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_PB_GetState
</UL>
<BR>[Calls]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[91]"></a>SD_IO_WriteByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteDummy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteCmd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_Init
</UL>

<P><STRONG><a name="[92]"></a>SD_IO_Init</STRONG> (Thumb, 74 bytes, Stack size 32 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteByte
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[93]"></a>SD_IO_ReadByte</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WaitResponse
</UL>

<P><STRONG><a name="[94]"></a>SD_IO_WaitResponse</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_ReadByte
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteCmd
</UL>

<P><STRONG><a name="[95]"></a>SD_IO_WriteCmd</STRONG> (Thumb, 96 bytes, Stack size 32 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WaitResponse
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteByte
</UL>

<P><STRONG><a name="[96]"></a>SD_IO_WriteDummy</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteByte
</UL>

<P><STRONG><a name="[97]"></a>W25Q16_IO_Init</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>

<P><STRONG><a name="[98]"></a>W25Q16_SPI_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[99]"></a>W25Q16_IO_WriteByte</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Write
</UL>

<P><STRONG><a name="[9a]"></a>W25Q16_IO_ReadByte</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Read
</UL>

<P><STRONG><a name="[9d]"></a>WriteCOM</STRONG> (Thumb, 118 bytes, Stack size 0 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPoint
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPiont
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayDirect
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutPixel
</UL>

<P><STRONG><a name="[9e]"></a>WriteDAT</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPicture
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPoint
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPiont
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayDirect
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutPixel
</UL>

<P><STRONG><a name="[9b]"></a>LCD_CtrlLinesConfig</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_CtrlLinesConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[9c]"></a>LCD_Init</STRONG> (Thumb, 436 bytes, Stack size 8 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = LCD_Init &rArr; LCD_CtrlLinesConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCOM
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_Init
</UL>

<P><STRONG><a name="[6e]"></a>LCD_SetDisplayDirect</STRONG> (Thumb, 302 bytes, Stack size 8 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LCD_SetDisplayDirect
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCOM
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawColorBMP
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Change_Direction
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBMP
</UL>

<P><STRONG><a name="[a2]"></a>WriteColor</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBMP
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPiont
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawColorBMP
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteChar
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBMP
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawChar
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutPixel
</UL>

<P><STRONG><a name="[a0]"></a>LCD_SetRamAddr</STRONG> (Thumb, 78 bytes, Stack size 20 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCOM
</UL>
<BR>[Called By]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowBMP
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPicture
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawColorBMP
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteChar
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBMP
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDisplayWindow
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawChar
</UL>

<P><STRONG><a name="[a1]"></a>LCD_Clear</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LCD_Clear &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Clear
</UL>

<P><STRONG><a name="[a3]"></a>DrawPiont</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DrawPiont
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCOM
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawCircle
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawCircle
</UL>

<P><STRONG><a name="[a5]"></a>ReadRAMDAT</STRONG> (Thumb, 274 bytes, Stack size 0 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPoint
</UL>

<P><STRONG><a name="[a4]"></a>ReadPoint</STRONG> (Thumb, 100 bytes, Stack size 28 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadRAMDAT
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCOM
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixel
</UL>

<P><STRONG><a name="[a6]"></a>LCD_DrawCircle</STRONG> (Thumb, 178 bytes, Stack size 32 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPiont
</UL>

<P><STRONG><a name="[a7]"></a>LCD_DrawLine</STRONG> (Thumb, 98 bytes, Stack size 28 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_DrawLine &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[a8]"></a>LCD_DrawRect</STRONG> (Thumb, 102 bytes, Stack size 28 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullCircle
</UL>

<P><STRONG><a name="[a9]"></a>LCD_DrawFullRect</STRONG> (Thumb, 66 bytes, Stack size 28 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = LCD_DrawFullRect &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
</UL>
<BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawFilledRectangle
</UL>

<P><STRONG><a name="[aa]"></a>LCD_DrawFullCircle</STRONG> (Thumb, 146 bytes, Stack size 36 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawRect
</UL>

<P><STRONG><a name="[ab]"></a>LCD_DrawUniLine</STRONG> (Thumb, 172 bytes, Stack size 68 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = LCD_DrawUniLine &rArr; DrawPiont
</UL>
<BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPiont
</UL>
<BR>[Called By]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawObliqueLine
</UL>

<P><STRONG><a name="[ac]"></a>ShowPicture</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT
</UL>

<P><STRONG><a name="[ad]"></a>ShowBMP</STRONG> (Thumb, 114 bytes, Stack size 36 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
</UL>

<P><STRONG><a name="[b2]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[ae]"></a>HAL_InitTick</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[68]"></a>HAL_Init</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b4]"></a>HAL_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DeInit
</UL>

<P><STRONG><a name="[b3]"></a>HAL_DeInit</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32f4xx_hal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspDeInit
</UL>

<P><STRONG><a name="[7e]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[b5]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_PollForTransfer
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>

<P><STRONG><a name="[64]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32f4xx_hal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Delay
</UL>

<P><STRONG><a name="[147]"></a>HAL_SuspendTick</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[148]"></a>HAL_ResumeTick</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[149]"></a>HAL_GetHalVersion</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[14a]"></a>HAL_GetREVID</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[14b]"></a>HAL_GetDEVID</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[14c]"></a>HAL_EnableDBGSleepMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[14d]"></a>HAL_DisableDBGSleepMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[14e]"></a>HAL_EnableDBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[14f]"></a>HAL_DisableDBGStopMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[150]"></a>HAL_EnableDBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[151]"></a>HAL_DisableDBGStandbyMode</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[152]"></a>HAL_EnableCompensationCell</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[153]"></a>HAL_DisableCompensationCell</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[84]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_GetPriorityGrouping
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
</UL>

<P><STRONG><a name="[85]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
</UL>

<P><STRONG><a name="[154]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[155]"></a>HAL_NVIC_SystemReset</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[b8]"></a>HAL_NVIC_GetPriorityGrouping</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_GetPriorityGrouping
</UL>

<P><STRONG><a name="[156]"></a>HAL_NVIC_GetPriority</STRONG> (Thumb, 138 bytes, Stack size 28 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[157]"></a>HAL_NVIC_SetPendingIRQ</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[158]"></a>HAL_NVIC_GetPendingIRQ</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[159]"></a>HAL_NVIC_ClearPendingIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[15a]"></a>HAL_NVIC_GetActive</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[15b]"></a>HAL_SYSTICK_CLKSourceConfig</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>HAL_SYSTICK_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_IRQHandler
</UL>

<P><STRONG><a name="[b9]"></a>HAL_SYSTICK_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Callback
</UL>

<P><STRONG><a name="[15c]"></a>HAL_DMA_Init</STRONG> (Thumb, 120 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[15d]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 3952 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>HAL_DMA_Start</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>

<P><STRONG><a name="[bd]"></a>HAL_DMA_Start_IT</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_DMA
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit_DMA
</UL>

<P><STRONG><a name="[be]"></a>HAL_DMA_Abort</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DMAStop
</UL>

<P><STRONG><a name="[bf]"></a>HAL_DMA_PollForTransfer</STRONG> (Thumb, 10074 bytes, Stack size 40 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>

<P><STRONG><a name="[15e]"></a>HAL_DMA_IRQHandler</STRONG> (Thumb, 9776 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[15f]"></a>HAL_DMA_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[160]"></a>HAL_DMA_GetError</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)

<P><STRONG><a name="[7f]"></a>HAL_GPIO_Init</STRONG> (Thumb, 466 bytes, Stack size 20 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_MCOConfig
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_CtrlLinesConfig
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q16_IO_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_MspInit
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_Init
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>

<P><STRONG><a name="[161]"></a>HAL_GPIO_DeInit</STRONG> (Thumb, 200 bytes, Stack size 20 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[86]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_PB_GetState
</UL>

<P><STRONG><a name="[80]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q16_IO_Init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteDummy
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteCmd
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_Init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>

<P><STRONG><a name="[83]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>

<P><STRONG><a name="[162]"></a>HAL_GPIO_LockPin</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>HAL_GPIO_EXTI_Callback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_IRQHandler
</UL>

<P><STRONG><a name="[c0]"></a>HAL_GPIO_EXTI_IRQHandler</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f4xx_hal_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_EXTI_Callback
</UL>

<P><STRONG><a name="[163]"></a>HAL_RCC_DeInit</STRONG> (Thumb, 96 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[66]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1016 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[67]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 612 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[c2]"></a>HAL_RCC_MCOConfig</STRONG> (Thumb, 146 bytes, Stack size 40 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>

<P><STRONG><a name="[164]"></a>HAL_RCC_EnableCSS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[165]"></a>HAL_RCC_DisableCSS</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c3]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 214 bytes, Stack size 16 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[af]"></a>HAL_RCC_GetHCLKFreq</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_RCC_GetHCLKFreq &rArr; HAL_RCC_GetSysClockFreq
</UL>
<BR>[Calls]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK2Freq
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetPCLK1Freq
<LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[c4]"></a>HAL_RCC_GetPCLK1Freq</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[c5]"></a>HAL_RCC_GetPCLK2Freq</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetHCLKFreq
</UL>

<P><STRONG><a name="[166]"></a>HAL_RCC_GetOscConfig</STRONG> (Thumb, 296 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[167]"></a>HAL_RCC_GetClockConfig</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)

<P><STRONG><a name="[c7]"></a>HAL_RCC_CCSCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_NMI_IRQHandler
</UL>

<P><STRONG><a name="[c6]"></a>HAL_RCC_NMI_IRQHandler</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, stm32f4xx_hal_rcc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_CCSCallback
</UL>

<P><STRONG><a name="[c8]"></a>HAL_SPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
</UL>

<P><STRONG><a name="[8a]"></a>HAL_SPI_Init</STRONG> (Thumb, 132 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[c9]"></a>HAL_SPI_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
</UL>

<P><STRONG><a name="[8c]"></a>HAL_SPI_DeInit</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>

<P><STRONG><a name="[90]"></a>HAL_SPI_Transmit</STRONG> (Thumb, 454 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Write
</UL>

<P><STRONG><a name="[8e]"></a>HAL_SPI_TransmitReceive</STRONG> (Thumb, 860 bytes, Stack size 40 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Read
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
</UL>

<P><STRONG><a name="[cb]"></a>HAL_SPI_Receive</STRONG> (Thumb, 578 bytes, Stack size 32 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
</UL>

<P><STRONG><a name="[cf]"></a>HAL_SPI_ErrorCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxCloseIRQHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxCloseIRQHandler
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_IRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAError
</UL>

<P><STRONG><a name="[ce]"></a>HAL_SPI_TxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxCloseIRQHandler
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[cd]"></a>HAL_SPI_TxRxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxCloseIRQHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxCloseIRQHandler
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
</UL>

<P><STRONG><a name="[168]"></a>HAL_SPI_Transmit_IT</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)

<P><STRONG><a name="[d1]"></a>HAL_SPI_RxCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxCloseIRQHandler
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
</UL>

<P><STRONG><a name="[d3]"></a>HAL_SPI_TransmitReceive_IT</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_IT
</UL>

<P><STRONG><a name="[d2]"></a>HAL_SPI_Receive_IT</STRONG> (Thumb, 224 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_IT
</UL>

<P><STRONG><a name="[d4]"></a>HAL_SPI_TxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitCplt
</UL>

<P><STRONG><a name="[d5]"></a>HAL_SPI_Transmit_DMA</STRONG> (Thumb, 220 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>

<P><STRONG><a name="[d6]"></a>HAL_SPI_RxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfReceiveCplt
</UL>

<P><STRONG><a name="[d7]"></a>HAL_SPI_TxRxHalfCpltCallback</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAHalfTransmitReceiveCplt
</UL>

<P><STRONG><a name="[d8]"></a>HAL_SPI_TransmitReceive_DMA</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive_DMA
</UL>

<P><STRONG><a name="[d9]"></a>HAL_SPI_Receive_DMA</STRONG> (Thumb, 290 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive_DMA
</UL>

<P><STRONG><a name="[169]"></a>HAL_SPI_DMAPause</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)

<P><STRONG><a name="[16a]"></a>HAL_SPI_DMAResume</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)

<P><STRONG><a name="[da]"></a>HAL_SPI_DMAStop</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
</UL>

<P><STRONG><a name="[db]"></a>HAL_SPI_IRQHandler</STRONG> (Thumb, 254 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>

<P><STRONG><a name="[89]"></a>HAL_SPI_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[16b]"></a>HAL_SPI_GetError</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f4xx_hal_spi.o(.text), UNUSED)

<P><STRONG><a name="[76]"></a>GL_SetTextColor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GL_SetTextColor
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawFilledCircle
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLabelVisible
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboBoxVisible
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonVisible
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSwitchVisible
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRadioButtonVisible
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCheckboxVisible
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[11d]"></a>GL_SetBackColor</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GL_SetBackColor
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboBoxVisible
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonVisible
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSwitchVisible
</UL>

<P><STRONG><a name="[6d]"></a>GL_Clear</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = GL_Clear &rArr; LCD_Clear &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Clear
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPage
</UL>

<P><STRONG><a name="[dc]"></a>LCD_PutPixel</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LCD_PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteDAT
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteCOM
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlidebarCursorPreDraw
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawCharTransparent
</UL>

<P><STRONG><a name="[dd]"></a>GL_LCD_DrawCharTransparent</STRONG> (Thumb, 136 bytes, Stack size 32 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GL_LCD_DrawCharTransparent &rArr; LCD_PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DisplayChar
</UL>

<P><STRONG><a name="[de]"></a>GL_LCD_DrawChar</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GL_LCD_DrawChar &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
</UL>
<BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DisplayChar
</UL>

<P><STRONG><a name="[df]"></a>GL_LCD_DisplayChar</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GL_LCD_DisplayChar &rArr; GL_LCD_DrawCharTransparent &rArr; LCD_PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawChar
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawCharTransparent
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
</UL>

<P><STRONG><a name="[e0]"></a>GL_DisplayAdjStringLine</STRONG> (Thumb, 108 bytes, Stack size 24 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = GL_DisplayAdjStringLine &rArr; GL_LCD_DisplayChar &rArr; GL_LCD_DrawCharTransparent &rArr; LCD_PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DisplayChar
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLabelVisible
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboBoxVisible
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonVisible
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSwitchVisible
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRadioButtonVisible
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCheckboxVisible
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[e1]"></a>GL_SetDisplayWindow</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawColorBMP
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBMP
</UL>

<P><STRONG><a name="[e2]"></a>GL_DrawLine</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = GL_DrawLine &rArr; LCD_DrawLine &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawLine
</UL>
<BR>[Called By]<UL><LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Cross
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawRect
</UL>

<P><STRONG><a name="[e3]"></a>GL_LCD_DrawRect</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, lcdhal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[e4]"></a>GL_LCD_DrawCircle</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, lcdhal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DrawPiont
</UL>
<BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawFilledCircle
</UL>

<P><STRONG><a name="[e5]"></a>GL_DrawBMP</STRONG> (Thumb, 218 bytes, Stack size 40 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayDirect
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDisplayWindow
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpBuffer32BitRead
</UL>
<BR>[Called By]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
</UL>

<P><STRONG><a name="[114]"></a>GL_SetFont</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, lcdhal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLabelVisible
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboBoxVisible
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonVisible
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSwitchVisible
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRadioButtonVisible
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCheckboxVisible
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[f1]"></a>GL_BackLightSwitch</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, lcdhal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimeOutCalculate
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorReadBtnstick
</UL>

<P><STRONG><a name="[6c]"></a>GL_LCD_Init</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = GL_LCD_Init &rArr; LCD_Init &rArr; LCD_CtrlLinesConfig &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[e7]"></a>LCD_GetPixel</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadPoint
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlidebarCursorPreDraw
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
</UL>

<P><STRONG><a name="[e8]"></a>LCD_Change_Direction</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, lcdhal.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LCD_Change_Direction &rArr; LCD_SetDisplayDirect
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayDirect
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLabelVisible
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
</UL>

<P><STRONG><a name="[e9]"></a>LCD_WriteChar</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, lcdhal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
</UL>
<BR>[Called By]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PrintChar
</UL>

<P><STRONG><a name="[ea]"></a>LCD_PrintChar</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, lcdhal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_WriteChar
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PrintStringLine
</UL>

<P><STRONG><a name="[eb]"></a>LCD_PrintStringLine</STRONG> (Thumb, 132 bytes, Stack size 24 bytes, lcdhal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PrintChar
</UL>

<P><STRONG><a name="[ec]"></a>LCD_DrawColorBMP</STRONG> (Thumb, 380 bytes, Stack size 40 bytes, lcdhal.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetRamAddr
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteColor
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_SetDisplayDirect
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetDisplayWindow
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BmpBuffer32BitRead
</UL>

<P><STRONG><a name="[ed]"></a>CursorDraw</STRONG> (Thumb, 348 bytes, Stack size 56 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = CursorDraw &rArr; LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixel
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInputData
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorShow
<LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPage
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallPreEvents
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorPosition
</UL>

<P><STRONG><a name="[ee]"></a>CursorPosition</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CursorPosition &rArr; CursorDraw &rArr; LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorStepMove
</UL>

<P><STRONG><a name="[ef]"></a>CursorStepMove</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = CursorStepMove &rArr; CursorPosition &rArr; CursorDraw &rArr; LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Delay
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorPosition
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorReadBtnstick
</UL>

<P><STRONG><a name="[7c]"></a>CursorReadBtnstick</STRONG> (Thumb, 212 bytes, Stack size 8 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = CursorReadBtnstick &rArr; CursorStepMove &rArr; CursorPosition &rArr; CursorDraw &rArr; LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorStepMove
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_BackLightSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>CursorInit</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CursorInit &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>CursorShow</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = CursorShow &rArr; CursorDraw &rArr; LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[7a]"></a>TimeOutCalculate</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, cursor.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TimeOutCalculate
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_BackLightSwitch
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[f3]"></a>GL_DrawFilledCircle</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_LCD_DrawCircle
</UL>

<P><STRONG><a name="[f5]"></a>GL_Cross</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
</UL>

<P><STRONG><a name="[f6]"></a>GL_DrawButtonBMP</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBMP
</UL>
<BR>[Called By]<UL><LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallPreEvents
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboBoxVisible
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonVisible
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSwitchVisible
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetRadioButtonVisible
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCheckboxVisible
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetIconVisible
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
</UL>

<P><STRONG><a name="[fa]"></a>NewLabel</STRONG> (Thumb, 94 bytes, Stack size 40 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Label
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[fd]"></a>NewButton</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Button
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[ff]"></a>NewCheckbox</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Checkbox
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[72]"></a>AddRadioOption</STRONG> (Thumb, 116 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AddRadioOption &rArr; GL_SetStringFieldValue &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_RadioButtonOption
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[71]"></a>NewRadioButtonGrp</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NewRadioButtonGrp &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_RadioButtonGrp
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[103]"></a>AddComboOption</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = AddComboOption &rArr; GL_SetStringFieldValue &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_ComboBoxOption
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[105]"></a>NewComboBoxGrp</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = NewComboBoxGrp &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_ComboBoxGrp
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPageControlObj
</UL>

<P><STRONG><a name="[107]"></a>NewSwitch</STRONG> (Thumb, 102 bytes, Stack size 32 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Switch
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[109]"></a>NewIcon</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Icon
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[75]"></a>NewSlidebar</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = NewSlidebar &rArr; GL_SetStringFieldValue &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Slidebar
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10c]"></a>NewHistogram</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Histogram
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[10f]"></a>NewGraphChart</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_GraphChart
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>

<P><STRONG><a name="[73]"></a>AddPageControlObj</STRONG> (Thumb, 478 bytes, Stack size 40 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76 + In Cycle
<LI>Call Chain = AddPageControlObj &rArr;  AddPageControlObj (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPageControlObj
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewComboBoxGrp
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddPageControlObj
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[11e]"></a>Set_Label</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
</UL>

<P><STRONG><a name="[11f]"></a>Get_Label</STRONG> (Thumb, 78 bytes, Stack size 24 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
</UL>

<P><STRONG><a name="[16c]"></a>Get_SlidebarValue</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, graphicobject.o(.text), UNUSED)

<P><STRONG><a name="[121]"></a>GetObjStatus</STRONG> (Thumb, 174 bytes, Stack size 8 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GetObjStatus
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[120]"></a>ShowPage</STRONG> (Thumb, 136 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = ShowPage &rArr; CursorDraw &rArr; LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Clear
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChangePage
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RefreshPage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[70]"></a>Create_PageObj</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Create_PageObj
</UL>
<BR>[Calls]<UL><LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[123]"></a>DestroyPageControl</STRONG> (Thumb, 1676 bytes, Stack size 32 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyPage
</UL>

<P><STRONG><a name="[125]"></a>DestroyPage</STRONG> (Thumb, 376 bytes, Stack size 16 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyPageControl
</UL>

<P><STRONG><a name="[126]"></a>SetGraphChartPoints</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[127]"></a>SetHistogramPoints</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>

<P><STRONG><a name="[16d]"></a>GetComboOptionActive</STRONG> (Thumb, 92 bytes, Stack size 12 bytes, graphicobject.o(.text), UNUSED)

<P><STRONG><a name="[16e]"></a>ResetComboOptionActive</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, graphicobject.o(.text), UNUSED)

<P><STRONG><a name="[16f]"></a>GetComboOptionLabel</STRONG> (Thumb, 98 bytes, Stack size 12 bytes, graphicobject.o(.text), UNUSED)

<P><STRONG><a name="[128]"></a>SetComboOptionLabel</STRONG> (Thumb, 124 bytes, Stack size 32 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
</UL>

<P><STRONG><a name="[170]"></a>SetIconImage</STRONG> (Thumb, 76 bytes, Stack size 20 bytes, graphicobject.o(.text), UNUSED)

<P><STRONG><a name="[12a]"></a>RefreshPage</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPage
</UL>

<P><STRONG><a name="[171]"></a>RefreshPageControl</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, graphicobject.o(.text), UNUSED)

<P><STRONG><a name="[12b]"></a>ChangePage</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ShowPage
</UL>

<P><STRONG><a name="[f0]"></a>GL_Delay</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GL_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInputData
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallPreEvents
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorStepMove
</UL>

<P><STRONG><a name="[12d]"></a>CompareBtnCoordinates</STRONG> (Thumb, 82 bytes, Stack size 12 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = CompareBtnCoordinates
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInputData
</UL>

<P><STRONG><a name="[79]"></a>ProcessInputData</STRONG> (Thumb, 240 bytes, Stack size 32 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = ProcessInputData &rArr; CallPreEvents &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CompareBtnCoordinates
<LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallEvent
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CallPreEvents
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetObjSize
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Delay
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[45]"></a>NullFunc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, graphicobject.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> main.o(.text)
</UL>
<P><STRONG><a name="[6b]"></a>Set_LCD_Resolution</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, graphicobject.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramPoints
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartPoints
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewGraphChart
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewHistogram
</UL>

<P><STRONG><a name="[172]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[173]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[174]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[175]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[124]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyPageControl
</UL>

<P><STRONG><a name="[122]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_PageObj
</UL>

<P><STRONG><a name="[176]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[130]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[f9]"></a>strncpy</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, strncpy.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
</UL>

<P><STRONG><a name="[f8]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboOptionLabel
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Label
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetObjSize
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetButtonVisible
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSwitchVisible
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetCheckboxVisible
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetStringFieldValue
</UL>

<P><STRONG><a name="[115]"></a>__aeabi_dadd</STRONG> (Thumb, 322 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[112]"></a>__aeabi_dsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[11b]"></a>__aeabi_drsub</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[119]"></a>__aeabi_dmul</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[118]"></a>__aeabi_ddiv</STRONG> (Thumb, 222 bytes, Stack size 32 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[117]"></a>__aeabi_ui2d</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[113]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2uiz
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[116]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[177]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[13e]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[136]"></a>__aeabi_uldivmod</STRONG> (Thumb, 98 bytes, Stack size 40 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[131]"></a>__aeabi_llsl</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, llshl.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[178]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[135]"></a>__aeabi_llsr</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, llushr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>

<P><STRONG><a name="[179]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[132]"></a>__aeabi_lasr</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, llsshr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[17a]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[17b]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[134]"></a>_double_round</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[133]"></a>_double_epilogue</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[137]"></a>__aeabi_d2ulz</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[5e]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[17c]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[139]"></a>__0sprintf</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[17d]"></a>__1sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[11a]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[17e]"></a>__c89sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[17f]"></a>sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0sprintf), UNUSED)

<P><STRONG><a name="[180]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[181]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[182]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[fc]"></a>free</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSlidebar
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRadioOption
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DestroyPageControl
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewGraphChart
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewHistogram
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewIcon
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSwitch
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewComboBoxGrp
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewCheckbox
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewButton
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewLabel
</UL>

<P><STRONG><a name="[6f]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSlidebar
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewRadioButtonGrp
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorInit
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRadioOption
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewGraphChart
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewHistogram
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewIcon
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSwitch
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewComboBoxGrp
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddComboOption
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewCheckbox
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewButton
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewLabel
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Create_Slidebar
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[63]"></a>Error_Handler</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Error_Handler &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[65]"></a>SystemClock_Config</STRONG> (Thumb, 120 bytes, Stack size 72 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Error_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>SPIx_MspInit</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>

<P><STRONG><a name="[88]"></a>SPIx_Init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_GetState
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q16_SPI_Init
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_Init
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>

<P><STRONG><a name="[8b]"></a>SPIx_Error</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_DeInit
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Write
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Read
</UL>

<P><STRONG><a name="[8d]"></a>SPIx_Read</STRONG> (Thumb, 42 bytes, Stack size 24 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q16_IO_ReadByte
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_ReadByte
</UL>

<P><STRONG><a name="[8f]"></a>SPIx_Write</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, stm32f4xx_nucleo.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPIx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;W25Q16_IO_WriteByte
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SD_IO_WriteByte
</UL>

<P><STRONG><a name="[9f]"></a>delay</STRONG> (Thumb, 34 bytes, Stack size 12 bytes, stm32f4xx_nucleo_extlcdforgl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = delay
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Init
</UL>

<P><STRONG><a name="[b7]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[b6]"></a>NVIC_GetPriorityGrouping</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f4xx_hal_cortex.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_GetPriorityGrouping
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[bc]"></a>DMA_SetConfig</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f4xx_hal_dma.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start_IT
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Start
</UL>

<P><STRONG><a name="[ca]"></a>SPI_WaitOnFlagUntilTimeout</STRONG> (Thumb, 278 bytes, Stack size 24 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxCloseIRQHandler
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxCloseIRQHandler
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TransmitReceive
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Transmit
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_Receive
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitReceiveCplt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMAReceiveCplt
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_DMATransmitCplt
</UL>

<P><STRONG><a name="[cc]"></a>SPI_TxCloseIRQHandler</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SPI_TxCloseIRQHandler &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxISR
</UL>

<P><STRONG><a name="[46]"></a>SPI_TxISR</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_TxISR &rArr; SPI_TxCloseIRQHandler &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_TxCloseIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[d0]"></a>SPI_RxCloseIRQHandler</STRONG> (Thumb, 248 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_RxCloseIRQHandler &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_2LinesRxISR
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxISR
</UL>

<P><STRONG><a name="[47]"></a>SPI_2LinesRxISR</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_2LinesRxISR &rArr; SPI_RxCloseIRQHandler &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxCloseIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>SPI_RxISR</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SPI_RxISR &rArr; SPI_RxCloseIRQHandler &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_RxCloseIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[4b]"></a>SPI_DMAError</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_DMAError
</UL>
<BR>[Calls]<UL><LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[4a]"></a>SPI_DMATransmitCplt</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_DMATransmitCplt &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxCpltCallback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[49]"></a>SPI_DMAHalfTransmitCplt</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_DMAHalfTransmitCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>SPI_DMAReceiveCplt</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_DMAReceiveCplt &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxCpltCallback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[4c]"></a>SPI_DMAHalfReceiveCplt</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_DMAHalfReceiveCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_RxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[4f]"></a>SPI_DMATransmitReceiveCplt</STRONG> (Thumb, 222 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SPI_DMATransmitReceiveCplt &rArr; SPI_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_WaitOnFlagUntilTimeout
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxCpltCallback
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_ErrorCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[4e]"></a>SPI_DMAHalfTransmitReceiveCplt</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, stm32f4xx_hal_spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SPI_DMAHalfTransmitReceiveCplt
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SPI_TxRxHalfCpltCallback
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f4xx_hal_spi.o(.text)
</UL>
<P><STRONG><a name="[e6]"></a>BmpBuffer32BitRead</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, lcdhal.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawColorBMP
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawBMP
</UL>

<P><STRONG><a name="[f2]"></a>GL_DrawFilledRectangle</STRONG> (Thumb, 44 bytes, Stack size 32 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GL_DrawFilledRectangle &rArr; LCD_DrawFullRect &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawFullRect
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboBoxVisible
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetHistogramVisible
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[f4]"></a>GL_DrawObliqueLine</STRONG> (Thumb, 36 bytes, Stack size 32 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = GL_DrawObliqueLine &rArr; LCD_DrawUniLine &rArr; DrawPiont
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_DrawUniLine
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetGraphChartVisible
</UL>

<P><STRONG><a name="[f7]"></a>GL_SetStringFieldValue</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GL_SetStringFieldValue &rArr; strncpy
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strncpy
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSlidebar
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRadioOption
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetComboOptionLabel
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Get_Label
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Set_Label
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewGraphChart
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewHistogram
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSwitch
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddComboOption
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewCheckbox
<LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewButton
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewLabel
</UL>

<P><STRONG><a name="[fb]"></a>Create_Label</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewLabel
</UL>

<P><STRONG><a name="[fe]"></a>Create_Button</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewButton
</UL>

<P><STRONG><a name="[100]"></a>Create_Checkbox</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewCheckbox
</UL>

<P><STRONG><a name="[101]"></a>Create_RadioButtonOption</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, graphicobject.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddRadioOption
</UL>

<P><STRONG><a name="[102]"></a>Create_RadioButtonGrp</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, graphicobject.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewRadioButtonGrp
</UL>

<P><STRONG><a name="[104]"></a>Create_ComboBoxOption</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, graphicobject.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AddComboOption
</UL>

<P><STRONG><a name="[106]"></a>Create_ComboBoxGrp</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, graphicobject.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewComboBoxGrp
</UL>

<P><STRONG><a name="[108]"></a>Create_Switch</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSwitch
</UL>

<P><STRONG><a name="[10a]"></a>Create_Icon</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewIcon
</UL>

<P><STRONG><a name="[10b]"></a>Create_Slidebar</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = Create_Slidebar &rArr; malloc
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewSlidebar
</UL>

<P><STRONG><a name="[10e]"></a>Create_Histogram</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewHistogram
</UL>

<P><STRONG><a name="[110]"></a>Create_GraphChart</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, graphicobject.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NewGraphChart
</UL>

<P><STRONG><a name="[59]"></a>SetGraphChartVisible</STRONG> (Thumb, 2310 bytes, Stack size 152 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 268<LI>Call Chain = SetGraphChartVisible &rArr; GL_DrawObliqueLine &rArr; LCD_DrawUniLine &rArr; DrawPiont
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawObliqueLine
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawFilledRectangle
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[58]"></a>SetHistogramVisible</STRONG> (Thumb, 1180 bytes, Stack size 144 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 248<LI>Call Chain = SetHistogramVisible &rArr; GL_DisplayAdjStringLine &rArr; GL_LCD_DisplayChar &rArr; GL_LCD_DrawCharTransparent &rArr; LCD_PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawFilledRectangle
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawLine
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
<LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[11c]"></a>SlidebarCursorPreDraw</STRONG> (Thumb, 334 bytes, Stack size 48 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = SlidebarCursorPreDraw &rArr; LCD_GetPixel &rArr; ReadPoint
</UL>
<BR>[Calls]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_GetPixel
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_PutPixel
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetSlidebarVisible
</UL>

<P><STRONG><a name="[57]"></a>SetSlidebarVisible</STRONG> (Thumb, 468 bytes, Stack size 56 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SetSlidebarVisible &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SlidebarCursorPreDraw
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Change_Direction
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[56]"></a>SetIconVisible</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = SetIconVisible &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[55]"></a>SetCheckboxVisible</STRONG> (Thumb, 172 bytes, Stack size 40 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SetCheckboxVisible &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[54]"></a>SetRadioButtonVisible</STRONG> (Thumb, 108 bytes, Stack size 40 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SetRadioButtonVisible &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[53]"></a>SetSwitchVisible</STRONG> (Thumb, 490 bytes, Stack size 56 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SetSwitchVisible &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetBackColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[52]"></a>SetButtonVisible</STRONG> (Thumb, 536 bytes, Stack size 56 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = SetButtonVisible &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetBackColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[51]"></a>SetComboBoxVisible</STRONG> (Thumb, 406 bytes, Stack size 40 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SetComboBoxVisible &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawFilledRectangle
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetBackColor
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[50]"></a>SetLabelVisible</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = SetLabelVisible &rArr; GL_DisplayAdjStringLine &rArr; GL_LCD_DisplayChar &rArr; GL_LCD_DrawCharTransparent &rArr; LCD_PutPixel
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetTextColor
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LCD_Change_Direction
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_SetFont
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DisplayAdjStringLine
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[5b]"></a>GetObjCoordinates</STRONG> (Thumb, 520 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetObjCoordinates
</UL>
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[5a]"></a>SetPage</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, graphicobject.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> graphicobject.o(.text)
</UL>
<P><STRONG><a name="[129]"></a>GetObjSize</STRONG> (Thumb, 222 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GetObjSize
</UL>
<BR>[Calls]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInputData
</UL>

<P><STRONG><a name="[12c]"></a>CallPreEvents</STRONG> (Thumb, 872 bytes, Stack size 56 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = CallPreEvents &rArr; GL_DrawButtonBMP &rArr; GL_DrawBMP &rArr; GL_SetDisplayWindow &rArr; LCD_SetRamAddr
</UL>
<BR>[Calls]<UL><LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_DrawButtonBMP
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GL_Delay
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CursorDraw
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInputData
</UL>

<P><STRONG><a name="[12e]"></a>CallEvent</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, graphicobject.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CallEvent
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ProcessInputData
</UL>

<P><STRONG><a name="[13b]"></a>_fp_digits</STRONG> (Thumb, 334 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[13a]"></a>_printf_core</STRONG> (Thumb, 1744 bytes, Stack size 136 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>

<P><STRONG><a name="[13d]"></a>_printf_post_padding</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[13c]"></a>_printf_pre_padding</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[5c]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0sprintf)
</UL><P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
